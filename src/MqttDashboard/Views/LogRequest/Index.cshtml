@* @using Newtonsoft.Json *@
@* @model LogRequestAndResponseModel *@
@* @{ *@
@*     ViewBag.Title = "Create Log Request"; *@
@* } *@
@* <h2>Create Log Request</h2> *@
@* *@
@* @using (Html.BeginForm("Index", "LogRequest", FormMethod.Post)) *@
@* { *@
@*     @Html.AntiForgeryToken() *@
@* *@
@*     <div class="card-body"> *@
@*         $1$ TargetId Field #1# *@
@*         <div class="form-group"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.TargetId, htmlAttributes: new { @class = "control-label" }) *@
@*             <div> *@
@*                 @Html.TextBoxFor(model => model.LogRequestModel.TargetId, new { @class = "form-control", id = "TargetId" }) *@
@*                 @Html.ValidationMessageFor(model => model.LogRequestModel.TargetId, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         </div> *@
@* *@
@*         $1$ LogRequestDto Fields #1# *@
@*         <div class="row"> *@
@*             <div class="col-md-6"> *@
@*                 <div class="form-group"> *@
@*                     @Html.LabelFor(model => model.LogRequestModel.LogTypes, htmlAttributes: new { @class = "control-label" }) *@
@*                     <div> *@
@*                         @foreach (var logType in Enum.GetValues(typeof(LogType))) *@
@*                         { *@
@*                             <div class="checkbox"> *@
@*                                 <label> *@
@*                                     <input type="checkbox" name="LogRequestModel.LogTypes" value="@logType.ToString()" /> @logType *@
@*                                 </label> *@
@*                             </div> *@
@*                         } *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="col-md-6"> *@
@*                 <div class="form-group"> *@
@*                     @Html.LabelFor(model => model.LogRequestModel.LogLevels, htmlAttributes: new { @class = "control-label" }) *@
@*                     <div> *@
@*                         @foreach (var logLevel in Enum.GetValues(typeof(LogLevel))) *@
@*                         { *@
@*                             <div class="checkbox"> *@
@*                                 <label> *@
@*                                     <input type="checkbox" name="LogRequestModel.LogLevels" value="@logLevel.ToString()" /> @logLevel *@
@*                                 </label> *@
@*                             </div> *@
@*                         } *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@* *@
@*         <div class="form-group row"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.IsAckRequired, htmlAttributes: new { @class = "control-label col-md-2" }) *@
@*             <div class="col-md-10"> *@
@*                 <div class="form-check"> *@
@*                     <label class="form-check-label"> *@
@*                         @Html.CheckBoxFor(model => model.LogRequestModel.IsAckRequired, new { @class = "form-check-input" }) Acknowledge Required *@
@*                     </label> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@* *@
@*         <div class="form-group"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.ActionType, htmlAttributes: new { @class = "control-label col-md-2" }) *@
@*             <div class="col-md-10"> *@
@*                 @Html.DropDownListFor(model => model.LogRequestModel.ActionType, *@
@*                     new SelectList(Enum.GetValues(typeof(ActionType))), *@
@*                     htmlAttributes: new { @class = "form-control" }) *@
@*                 @Html.ValidationMessageFor(model => model.LogRequestModel.ActionType, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         </div> *@
@* *@
@*         <div class="form-group"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.ResponseType, htmlAttributes: new { @class = "control-label col-md-2" }) *@
@*             <div class="col-md-10"> *@
@*                 @Html.DropDownListFor(model => model.LogRequestModel.ResponseType, *@
@*                     new SelectList(Enum.GetValues(typeof(ResponseType))), *@
@*                     htmlAttributes: new { @class = "form-control" }) *@
@*                 @Html.ValidationMessageFor(model => model.LogRequestModel.ResponseType, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         </div> *@
@* *@
@*         <div class="form-group"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.FromDate, htmlAttributes: new { @class = "control-label col-md-2" }) *@
@*             <div class="col-md-10"> *@
@*                 @Html.EditorFor(model => model.LogRequestModel.FromDate, new { htmlAttributes = new { @class = "form-control" } }) *@
@*                 @Html.ValidationMessageFor(model => model.LogRequestModel.FromDate, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         </div> *@
@* *@
@*         <div class="form-group"> *@
@*             @Html.LabelFor(model => model.LogRequestModel.EndDate, htmlAttributes: new { @class = "control-label col-md-2" }) *@
@*             <div class="col-md-10"> *@
@*                 @Html.EditorFor(model => model.LogRequestModel.EndDate, new { htmlAttributes = new { @class = "form-control" } }) *@
@*                 @Html.ValidationMessageFor(model => model.LogRequestModel.EndDate, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         </div> *@
@*         <div class="form-group"> *@
@*             <button type="submit" class="btn btn-outline-primary w-100"> *@
@*                 <i class="bi bi-check-circle"></i> Send *@
@*             </button> *@
@*         </div> *@
@*     </div> *@
@* } *@
@* <div class="card-body"> *@
@*    @await Component.InvokeAsync("MqttResponse") *@
@* </div> *@
@* *@
@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@* *@
@* <script> *@
@*     $(document).ready(function() { *@
@*         $('input[name="selectedClients"]').change(function() { *@
@*             if ($(this).is(':checked')) { *@
@*                 var deviceName = $(this).val(); // Get the device name *@
@*                 $('#TargetId').val(deviceName); // Update the TargetId input field *@
@*             } *@
@*         }); *@
@*     }); *@
@* </script> *@
@* *@
@model LogResponseModel

@{
    ViewData["Title"] = "Log Request";
}

<h2>Log Request</h2>

<form asp-action="SendLogRequest" method="post">
    <div class="form-group">
        <label for="TargetId">Target Id</label>
        <input id="TargetId" name="LogRequestDto.TargetId" class="form-control" />
    </div>

    <div class="form-group">
        <label for="LogTypes">Log Types</label>
        <select id="LogTypes" name="LogRequestDto.LogTypes" class="form-control" multiple>
            @foreach (var logType in Enum.GetValues(typeof(MqttDomain.Enums.LogType)))
            {
                <option value="@logType">@logType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="LogLevels">Log Levels</label>
        <select id="LogLevels" name="LogRequestDto.LogLevels" class="form-control" multiple>
            @foreach (var logLevel in Enum.GetValues(typeof(MqttDomain.Enums.LogLevel)))
            {
                <option value="@logLevel">@logLevel</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="IsAckRequired">Is Acknowledgment Required</label>
        <input id="IsAckRequired" name="LogRequestDto.IsAckRequired" type="checkbox" class="form-control" />
    </div>

    <div class="form-group">
        <label for="ActionType">Action Type</label>
        <select id="ActionType" name="LogRequestDto.ActionType" class="form-control">
            @foreach (var actionType in Enum.GetValues(typeof(MqttDomain.Enums.ActionType)))
            {
                <option value="@actionType">@actionType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="ResponseType">Response Type</label>
        <select id="ResponseType" name="LogRequestDto.ResponseType" class="form-control">
            @foreach (var responseType in Enum.GetValues(typeof(MqttDomain.Enums.ResponseType)))
            {
                <option value="@responseType">@responseType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="FromDate">From Date</label>
        <input id="FromDate" name="LogRequestDto.FromDate" type="date" class="form-control" />
    </div>

    <div class="form-group">
        <label for="EndDate">End Date</label>
        <input id="EndDate" name="LogRequestDto.EndDate" type="date" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Send Log Request</button>
</form>

<h2>Log Response</h2>

@if (Model != null && Model.Messages != null && Model.Messages.Count > 0)
{
    <ul>
        @foreach (var message in Model.Messages)
        {
            <li>@message</li>
        }
    </ul>
}
else
{
    <p>No responses yet.</p>
}
