@model LogRequestModel
@{
    ViewBag.Title = "Create Log Request";
}
<h2>Create Log Request</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card-body">
        @* TargetId Field *@
        <div class="form-group">
            @Html.LabelFor(model => model.TargetId, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.TargetId, new { @class = "form-control", id = "TargetId" })
                @Html.ValidationMessageFor(model => model.TargetId, "", new { @class = "text-danger" })
            </div>
        </div>

        @* LogRequestDto Fields *@
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LogRequestDto.LogTypes, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @foreach (var logType in Enum.GetValues(typeof(LogType)))
                        {
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="LogRequestDto.LogTypes" value="@logType.ToString()" /> @logType
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LogRequestDto.LogLevels, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @foreach (var logLevel in Enum.GetValues(typeof(LogLevel)))
                        {
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="LogRequestDto.LogLevels" value="@logLevel.ToString()" /> @logLevel
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LogRequestDto.IsAckRequired, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.CheckBoxFor(model => model.LogRequestDto.IsAckRequired, new { @class = "form-check-input" }) Acknowledge Required
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogRequestDto.ActionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LogRequestDto.ActionType,
                    new SelectList(Enum.GetValues(typeof(ActionType))),
                    htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LogRequestDto.ActionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogRequestDto.ResponseType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LogRequestDto.ResponseType,
                    new SelectList(Enum.GetValues(typeof(ResponseType))),
                    htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LogRequestDto.ResponseType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogRequestDto.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogRequestDto.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogRequestDto.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogRequestDto.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogRequestDto.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogRequestDto.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div class="json-data">
    <h3>JSON Data Preview</h3>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        $('input[name="selectedClients"]').change(function() {
            if ($(this).is(':checked')) {
                var deviceName = $(this).val(); // Get the device name
                $('#TargetId').val(deviceName); // Update the TargetId input field
            }
        });
    });
</script>
